[
    {
        "id": "14a296c4da03d9c9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "16f74d1a68bd0f2b",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "22d9f7ca221992a0",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "35fc4ddfe31410e5",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9705775bd5e519a8",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fe9b0f3adac282b2",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95bb256f963583fa",
        "type": "tab",
        "label": "Flow 6",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "43491a34b8491d65",
        "type": "tab",
        "label": "Flow 7",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d93d4725cea99c7e",
        "type": "tab",
        "label": "Flow 8",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "04ccce6cac126a6f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f1e39d21686bf923",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "tseriesdb",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "67786d88d68552d0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9044142295e7a5c8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ae52d21a93287b3b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2a5760a48db048fe",
        "type": "inject",
        "z": "16f74d1a68bd0f2b",
        "name": "timestamp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "3d5476e4e7b3fa38",
                "1110a3c03906fec0"
            ]
        ]
    },
    {
        "id": "3d5476e4e7b3fa38",
        "type": "debug",
        "z": "16f74d1a68bd0f2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 160,
        "wires": []
    },
    {
        "id": "1110a3c03906fec0",
        "type": "mqtt out",
        "z": "16f74d1a68bd0f2b",
        "name": "timestamp",
        "topic": "timestamp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ae52d21a93287b3b",
        "x": 490,
        "y": 240,
        "wires": []
    },
    {
        "id": "717d1590dd640fe0",
        "type": "mqtt out",
        "z": "22d9f7ca221992a0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ae52d21a93287b3b",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd1ebb108f481369",
        "type": "function",
        "z": "22d9f7ca221992a0",
        "name": "create message",
        "func": "// create message\nmsg.topic = msg.req.params.topic;\nmsg.payload = msg.req.params.payload;\nmsg.qos = 2;\nmsg.retain = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            [
                "6253325815b1016f",
                "717d1590dd640fe0"
            ]
        ]
    },
    {
        "id": "6253325815b1016f",
        "type": "function",
        "z": "22d9f7ca221992a0",
        "name": "create response",
        "func": "// create response\nmsg.payload = {\n    success: true,\n    message: \"published \" + \n    msg.req.params.topic +\n    \"/\" +\n    msg.req.params.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 260,
        "wires": [
            [
                "777da32a607499ae"
            ]
        ]
    },
    {
        "id": "777da32a607499ae",
        "type": "http response",
        "z": "22d9f7ca221992a0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 720,
        "y": 260,
        "wires": []
    },
    {
        "id": "b734b78c1f8cd76c",
        "type": "http in",
        "z": "22d9f7ca221992a0",
        "name": "",
        "url": "/pub/:topic/:payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "fd1ebb108f481369"
            ]
        ]
    },
    {
        "id": "811cb2be51f587c0",
        "type": "mqtt in",
        "z": "35fc4ddfe31410e5",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "ae52d21a93287b3b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 380,
        "wires": [
            [
                "44808b5cecd6a605"
            ]
        ]
    },
    {
        "id": "44808b5cecd6a605",
        "type": "function",
        "z": "35fc4ddfe31410e5",
        "name": "",
        "func": "// create query\n\nvar timestamp = new Date().getTime()/1000;\n// pad it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n// trim to exact length 10 + 1 + 3\ntimestamp = timestamp.substring(0, 14);\nvar strQuery = \"INSERT INTO thingData (topic, payload, timestamp, deleted) VALUES ('\" \n                + escape(msg.topic) \n                + \"','\" \n                + escape(msg.payload) \n                + \"','\" \n                + timestamp \n                + \"', 0);\";\nmsg.topic = strQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 400,
        "wires": [
            [
                "d7240e3b1dc9c281"
            ]
        ]
    },
    {
        "id": "d7240e3b1dc9c281",
        "type": "mysql",
        "z": "35fc4ddfe31410e5",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 600,
        "y": 400,
        "wires": [
            [
                "77c90809be977b85"
            ]
        ]
    },
    {
        "id": "77c90809be977b85",
        "type": "debug",
        "z": "35fc4ddfe31410e5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 400,
        "wires": []
    },
    {
        "id": "6dfcdbfd8e5e5466",
        "type": "http in",
        "z": "9705775bd5e519a8",
        "name": "",
        "url": "/get/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "1745756785f75689"
            ]
        ]
    },
    {
        "id": "b6782729926ecd78",
        "type": "http in",
        "z": "9705775bd5e519a8",
        "name": "",
        "url": "/get/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "1745756785f75689"
            ]
        ]
    },
    {
        "id": "1745756785f75689",
        "type": "function",
        "z": "9705775bd5e519a8",
        "name": "create query",
        "func": "// Create query\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n// build the sql query\nmsg.topic = \"SELECT id,topic,payload,timestamp \" +\n            \"FROM thingData \" +\n            \"WHERE topic='\" + escape(msg.req.params.topic) + \"' \" +\n            \"AND deleted=0 \" +\n            \"ORDER BY id DESC \" +\n            \"LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 200,
        "wires": [
            [
                "a00eab17cef2a4f5"
            ]
        ]
    },
    {
        "id": "a00eab17cef2a4f5",
        "type": "mysql",
        "z": "9705775bd5e519a8",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 580,
        "y": 200,
        "wires": [
            [
                "3a10dbe78a06cb89"
            ]
        ]
    },
    {
        "id": "3a10dbe78a06cb89",
        "type": "function",
        "z": "9705775bd5e519a8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 200,
        "wires": [
            [
                "a943638aaf1bb6b0"
            ]
        ]
    },
    {
        "id": "a943638aaf1bb6b0",
        "type": "http response",
        "z": "9705775bd5e519a8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 200,
        "wires": []
    },
    {
        "id": "bd23df1c925919a5",
        "type": "mysql",
        "z": "fe9b0f3adac282b2",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 600,
        "y": 480,
        "wires": [
            [
                "8aa2ca12a541e5e9"
            ]
        ]
    },
    {
        "id": "250b906511c84ea1",
        "type": "http in",
        "z": "fe9b0f3adac282b2",
        "name": "",
        "url": "/get/topic/:topic/payload/:payload/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 520,
        "wires": [
            [
                "eec4bf358a371ab0"
            ]
        ]
    },
    {
        "id": "eec4bf358a371ab0",
        "type": "function",
        "z": "fe9b0f3adac282b2",
        "name": "create query",
        "func": "if(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\n\nmsg.topic = \"SELECT id,topic,payload,timestamp\" + \n            \" FROM thingData WHERE\" + \n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g, \"%\") + \"'\" + \n            \" AND\" + \n            \" payload LIKE '\" + \n            msg.req.params.payload.replace(/\\*/g, \"%\") + \"'\" + \n            \" AND deleted=0\" + \n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY ID DESC\" + \n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "bd23df1c925919a5"
            ]
        ]
    },
    {
        "id": "8aa2ca12a541e5e9",
        "type": "function",
        "z": "fe9b0f3adac282b2",
        "name": "prepare response",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 580,
        "wires": [
            [
                "9b27cca9fce013a6"
            ]
        ]
    },
    {
        "id": "9b27cca9fce013a6",
        "type": "http response",
        "z": "fe9b0f3adac282b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 520,
        "y": 700,
        "wires": []
    },
    {
        "id": "8d3920fcf44b3416",
        "type": "http in",
        "z": "95bb256f963583fa",
        "name": "",
        "url": "/get/:topic/after/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "74e9a5777af27fce"
            ]
        ]
    },
    {
        "id": "52faace7b75a82ea",
        "type": "http in",
        "z": "95bb256f963583fa",
        "name": "",
        "url": "/get/:topic/before/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "fe91009cbb386da9"
            ]
        ]
    },
    {
        "id": "ac3ab78de65bf2c1",
        "type": "http in",
        "z": "95bb256f963583fa",
        "name": "",
        "url": "/get/:topic/during/:start/:end/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "5d06b46f32a9e704"
            ]
        ]
    },
    {
        "id": "d2bcb40763be5653",
        "type": "mysql",
        "z": "95bb256f963583fa",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 680,
        "y": 340,
        "wires": [
            [
                "37edd07b16a598be"
            ]
        ]
    },
    {
        "id": "74e9a5777af27fce",
        "type": "function",
        "z": "95bb256f963583fa",
        "name": "create 'AFTER' query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n            \" FROM thingData WHERE\" +\n            \" topic LIKE '\" + msg.req.params.topic.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND\" +\n            \" timestamp >= '\" + msg.req.params.time + \"'\" +\n            \" AND deleted=0\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY ID DESC\" +\n            \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "d2bcb40763be5653"
            ]
        ]
    },
    {
        "id": "fe91009cbb386da9",
        "type": "function",
        "z": "95bb256f963583fa",
        "name": "create 'BEFORE' query",
        "func": "\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n            \" FROM thingData WHERE\" +\n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g, \"%\") + \"'\" +\n            \" AND\" +\n            \" timestamp <= '\" + msg.req.params.time + \"'\" +\n            \" AND deleted=0\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY ID DESC\" +\n            \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 340,
        "wires": [
            [
                "d2bcb40763be5653"
            ]
        ]
    },
    {
        "id": "5d06b46f32a9e704",
        "type": "function",
        "z": "95bb256f963583fa",
        "name": "create 'DURING' query",
        "func": "if(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n            \" FROM thingData WHERE\" +\n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g, \"%\") + \"'\" +\n            \" AND\" +\n            \" timestamp >= '\" + msg.req.params.start + \"'\" +\n            \" AND\" +\n            \" timestamp <='\" + msg.req.params.end + \"'\" +\n            \" AND deleted=0\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY ID DESC\" +\n            \" LIMIT \" + msg.req.params.count + \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 520,
        "wires": [
            [
                "d2bcb40763be5653"
            ]
        ]
    },
    {
        "id": "37edd07b16a598be",
        "type": "function",
        "z": "95bb256f963583fa",
        "name": "prepare response",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 240,
        "wires": [
            [
                "0bfe0b465991921c"
            ]
        ]
    },
    {
        "id": "0bfe0b465991921c",
        "type": "http response",
        "z": "95bb256f963583fa",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "0dc813126204fdd3",
        "type": "http in",
        "z": "43491a34b8491d65",
        "name": "",
        "url": "/get/delete/:topic/id/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "db28a6c6cc6fed0e"
            ]
        ]
    },
    {
        "id": "3f600741c159a3d3",
        "type": "http in",
        "z": "43491a34b8491d65",
        "name": "",
        "url": "/get/delete/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "3cb4f1a8ce245899"
            ]
        ]
    },
    {
        "id": "b06d9b3964d87924",
        "type": "http in",
        "z": "43491a34b8491d65",
        "name": "",
        "url": "/get/delete/:topic/first/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "7a21c23623cb077d"
            ]
        ]
    },
    {
        "id": "48ed2d971462d636",
        "type": "http in",
        "z": "43491a34b8491d65",
        "name": "",
        "url": "/get/delete/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "d42142b12f1077a4"
            ]
        ]
    },
    {
        "id": "db28a6c6cc6fed0e",
        "type": "function",
        "z": "43491a34b8491d65",
        "name": "",
        "func": "if(!msg.req.authFilter)\n    msg.req.authFilter = 1;\nmsg.topic = \"UPDATE thingData\" +\n            \" SET deleted=1\" +\n            \" WHERE\" +\n            \" topic='\" + msg.req.params.topic + \"'\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" AND id=\" + msg.req.params.id + \";\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "2a313f1abd85dd73"
            ]
        ]
    },
    {
        "id": "3cb4f1a8ce245899",
        "type": "function",
        "z": "43491a34b8491d65",
        "name": "",
        "func": "if(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic = \"UPDATE thingData\" +\n            \" SET deleted=1 \" +\n            \" WHERE\" + \n            \" topic='\" + msg.req.params.topic + \"'\" +\n            \" AND (\" + msg.req.authFilter + \");\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "2a313f1abd85dd73"
            ]
        ]
    },
    {
        "id": "7a21c23623cb077d",
        "type": "function",
        "z": "43491a34b8491d65",
        "name": "",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY id DESC LIMIT \" + msg.req.params.count + \n            \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "2a313f1abd85dd73"
            ]
        ]
    },
    {
        "id": "d42142b12f1077a4",
        "type": "function",
        "z": "43491a34b8491d65",
        "name": "",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY id DESC LIMIT \" + msg.req.params.count + \n            \";\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 440,
        "wires": [
            [
                "2a313f1abd85dd73"
            ]
        ]
    },
    {
        "id": "2a313f1abd85dd73",
        "type": "mysql",
        "z": "43491a34b8491d65",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 480,
        "y": 300,
        "wires": [
            [
                "213bad2992763d29"
            ]
        ]
    },
    {
        "id": "213bad2992763d29",
        "type": "function",
        "z": "43491a34b8491d65",
        "name": "",
        "func": "msg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "373ea0384555e403"
            ]
        ]
    },
    {
        "id": "373ea0384555e403",
        "type": "http response",
        "z": "43491a34b8491d65",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "9dc81e1191a3484a",
        "type": "mqtt in",
        "z": "d93d4725cea99c7e",
        "name": "listen everything",
        "topic": "timestamp",
        "qos": "2",
        "datatype": "auto",
        "broker": "ae52d21a93287b3b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 340,
        "wires": [
            [
                "5ab91676f66c38c4",
                "3125b33af149e666"
            ]
        ]
    },
    {
        "id": "5ab91676f66c38c4",
        "type": "function",
        "z": "d93d4725cea99c7e",
        "name": "create query",
        "func": "// Create query\n// get microtime\nvar timestamp = new Date().getTime()/1000;\n// pad it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n// trim to exact length 10 + 1 + 3\ntimestamp = timestamp.substring(0, 14);\nvar strQuery = \"INSERT INTO thingData (topic, payload, timestamp, deleted) VALUES ('\" +\n                escape(msg.topic) + \"','\" + escape(msg.payload) + \"','\" + \n                timestamp + \"', 0);\";\n\nmsg.topic = strQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 300,
        "wires": [
            [
                "df2b445cf62a183f"
            ]
        ]
    },
    {
        "id": "3125b33af149e666",
        "type": "function",
        "z": "d93d4725cea99c7e",
        "name": "search rules",
        "func": "msg.topic = \"SELECT * FROM ruleEngine\" +\n            \" WHERE\" +\n            \" ('\" + msg.topic + \"' LIKE topicPattern)\" +\n            \" AND\" +\n            \" ('\" + msg.payload + \"' LIKE payloadPattern)\" +\n            \" AND active=1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 380,
        "wires": [
            [
                "7140347a1607ab8f"
            ]
        ]
    },
    {
        "id": "df2b445cf62a183f",
        "type": "mysql",
        "z": "d93d4725cea99c7e",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 480,
        "y": 300,
        "wires": [
            [
                "a707fa76ac0a2646"
            ]
        ]
    },
    {
        "id": "a707fa76ac0a2646",
        "type": "debug",
        "z": "d93d4725cea99c7e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "7140347a1607ab8f",
        "type": "mysql",
        "z": "d93d4725cea99c7e",
        "mydb": "f1e39d21686bf923",
        "name": "",
        "x": 480,
        "y": 380,
        "wires": [
            [
                "ba981bce8cb71e55"
            ]
        ]
    },
    {
        "id": "202d2114b050b0db",
        "type": "http request",
        "z": "d93d4725cea99c7e",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 850,
        "y": 380,
        "wires": [
            [
                "0f96602c8ebd9a80"
            ]
        ]
    },
    {
        "id": "0f96602c8ebd9a80",
        "type": "debug",
        "z": "d93d4725cea99c7e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 380,
        "wires": []
    },
    {
        "id": "ba981bce8cb71e55",
        "type": "function",
        "z": "d93d4725cea99c7e",
        "name": "call webHook",
        "func": "if(msg.payload.length !== 0)\n{\n    for(var i = 0; i < msg.payload.length; i++)\n    {\n        msg.method = msg.payload[i].method;\n        msg.url = msg.payload[i].webHook;\n        node.send([msg]);\n    } \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "202d2114b050b0db"
            ]
        ]
    }
]